Bootstrap 5

- Layout
- Content
- Forms
- Components

Jumbotron di v.5 Tidak ada sekarang disebut hero section
Jika agar text di tengah menggunakan text-center
namun jika kanan kiri tidak ada dan diganti dengan right dan end


Utilities > Nama Warna


----- Navbar
div : cara agar navbar tidak terlalu mepet ganti 'container-fluid' menjadi 'container' saja
ul : cara agar text berada di kanan tambahkan margin start 'ms-auto'
nav : nav bar menjadi biru 'bg-primary'
      'navbar-light' class bootstrap yg memberitahukan bahwa warna yang digunakan terang, maka text akan menjadi hitam
      maka ganti menjadi 'navbar-dark' (kebalikannya) agar text menjadi terang
      memberikan shadow 'shadow-sm'
      berikan 'fixed-top' agar navbar berada di atas web

----- Jumbotron
Setiap Kontennya Masukkan dalam section
section : berikan 'text-center' agar konten berada di tengah
img : berikan 'rounded-circle' agar image menjadi bulat
      berikan 'img-thumbnail' untuk border luar gambar
h1 : 'display-4' memberikan ketebalan dan jenis text berbeda
p : class 'lead' merubah ketebalan dan jenis text berbeda
svg : memberikan waves (https://getwaves.io/)

----- About Me!
Setiap Kontennya Masukkan dalam section
row : di dalam container > row, berikan 'text-center' agar text berada di tengah
      memberikan mb > Utilities(margin-bottom 'mb-4')
row : agar colnya berada di tengah berikan justify-content-center
      memberikan font-size 'fs-5'
      agar rata tengah diberikan 'text-center'
col : artinya 1 halaman web dibuat 1 kolom
      jika ada 2 col maka 1 halaman web dibagi 2 col (masing masing 6)
      maka jika ingin mengatur ukuran colnya berikan angka misal (col-4)
      Responsive (breakpoint) agar card menjadi responsive berikan menjadi md 
      misal col-md-4
svg : memberikan waves (https://getwaves.io/)

----- Projects
Setiap Kontennya Masukkan dalam section
row : div.container > div.row berikan 'text-center' agar judul berada di tengah
col : 'col-4' akan membuat ukuran sebesar 4col dari 12col
      Card > style dihapus
      Responsive (breakpoint) agar card menjadi responsive berikan menjadi md 
      misal col-md-4
      agar 2 gambar lagi berada di tengah di row berikan 'justify-content-center'
svg : memberikan waves (https://getwaves.io/)

----- Contact
Setiap Kontennya Masukkan dalam section
row : div.container > div.row berikan 'text-center' agar judul berada di tengah
      'mb-4' = margin bottom 4
row : justify-content-center agar konten berada di tengah
col : berikan col-md-8 agar ukurannya sebesar 8 col dan md agar menjadi responsive
      berikan form text, dan text area
svg : memberikan waves (https://getwaves.io/)

----- Footer
Footer : diberikan 'bg-primary' agar warna sama dengan navbar
         diberikan 'text-light' agar tulisan menjadi putih
         diberikan 'text-center' agar text berada di tengah
         diberikan 'pb-5' padding bottom
p : diberi icon love <i class="bi bi-suit-heart-fill text-danger"></i>
            untuk mengaktifkannya panggil
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    a : agar saat di klik menuju sosial media kita
        'text-white' agar tulisan menjadi putih
        'fw-bold' agar tulisan menjadi bold

----- Hyperlink
body diberi id sebagai #home



// Upload ke GitHub
// Edit Code to GitHub
      edit file
      Buka cmd Git pada lokasi filenya
      git add .
      git commit -m 'Mengubah Button Menjadi Warna Hijau'
      git push

      Buka lagi pada github maka hasil perubahan akan terlihat

// Upload menggunakan NiagaHoster
// Video Bootstrap 5



// Animate menggunakan AOS 
Search AOS (https://michalsnik.github.io/aos/)
lalu buka githubnya untuk cara penggunaannya README
copy kan link dan scriptnya
dan berikan animatenya misal (data-aos="fade-down")

Section About
Pada Paragraf di About
data-aos="fade-left" data-aos-duration="2000" data-aos-delay="200"

Section Projects
Pada div dengan class card berikan
data-aos="flip-left" data-aos-duration="1500" data-aos-delay="200"

untuk setiap gambar
data-aos="flip-left" data-aos-duration="1500" (gambar awal)
data-aos="flip-left" data-aos-duration="1500" data-aos-delay="400" (gambar akhir berikan delay / 100 tiap cardnya kecuali card awal)


Script agar animasi hanya dilakukan 1x tidak berulang kali dengan menambahkan
<script>
      AOS.init({
            once: true
      });
</script>


----- Gallery
Buat Section Gallery dengan id dan class Gallery > container > row > col-md-3
Buat folder baru di dalam img dengan nama folder gallery dan masukkan gambar sebanyak yang dibutuhkan
lalu buat tag a agar sebagai hyperlink dan di dalam tag a ada tag img 
masukkan img dengan gambar yang berada di folder gallery

img : berikan 'img-fluid' agar gambar menjadi responsive
      lalu buat class baru dengan nama class gallery-img

      lalu tambahkan di dalam style.css
      .gallery-img {
      width: 100%;
      }
      Agar gambar menyesuaikan sebesar 100% saat di mobile

      #gallery .row > * {
      padding: 0;
      }
      agar gambar menempel dan tidak ada jarak saat dibuka di versi mobile


const galleryImage = document.querySelectorAll('.gallery-img');

            galleryImage.forEach((img, i) => {
                img.dataset.aos = 'fade-down';
                img.dataset.aosDelay = i * 100;
                img.dataset.aosDuration = 1000;
            })

Di dalam Script buat variabel dengan galleryImage dan panggil disetiap class 'gallery-img'
pada variabel galleryImage lakukan perulangan pada tag img, (i) tambah 1 animasi dari aos
kemudian berikan animasi dari aos fade-down, delay dan durasi pada semua tag img yang diberikan class .gallery-img


Penggunaan GSAP Property (https://greensock.com/docs/v3/Installation)
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.3/gsap.min.js"></script>
to (patokan awal) from (patokan akhir)

Ada 2 element (1. Tag mana yg di pilih, 2. Property GSAP)
Contoh : gsap.from('.display-4', {duration: 1, x: 50, opacity: 0, delay: 0.5, ease: 'back'});

Text plugin GSAP
https://greensock.com/docs/v3/Installation
Klik CDN > text 
copy script
lalu buat source code, seperti
        gsap.registerPlugin(TextPlugin);
        gsap.to('.lead', { duration: 1.5, delay: 1.5, text: 'Design Graphic || Programmer || Gamer' });





// Tilt JS
- Search Tilt JS (https://micku7zu.github.io/vanilla-tilt.js/)
      - Pilih Vanilla JS
      - Klik vanilla-tilt.min.js
      - Save dan simpan ke dalam folder
      - Tambahkan <script type="text/javascript" src="vanilla-tilt.min.js"></script>
      - Lalu untuk membuat scriptnya seperti ini
	<script>
	VanillaTilt.init(document.querySelector(".keyboard-box"), {
		max: 25,
		speed: 400
	});
	</script>
- Lalu membuat animasi dan memasukkan gambar agar dapat 3D



// Menyimpan Pesan Ke Google Sheet
- Buka GitHub (github.com/jamiewilson/form-to-google-sheets)
- Buka Google sheets
- Ikuti Langkahnya seperti yang ada di github
- Jika memberikan headers pada google sheets
      Kemudian berikan name pada formnya  misalkan di google sheets ada alamat maka pada form alamat berikan name="alamat" pada inputannya dan harus sama agar saling terconect
- Memberikan Alert dan Loading, kemudian dianimasikan menggunakan Java Script